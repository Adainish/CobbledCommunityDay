buildscript {
    repositories {
        jcenter()
    }
    repositories {
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath("gradle.plugin.com.github.johnrengelman:shadow:7.1.2")
    }
}

plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    mavenCentral()
    maven
            {
                name = 'ImpactDevelopment'
                url = 'https://maven.impactdev.net/repository/development/'
            }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation("com.cobblemon:fabric:1.4.0+1.20.1-SNAPSHOT")
//    modImplementation("ca.landonjw.gooeylibs:fabric:3.0.0-1.20.1-SNAPSHOT")
    implementation "org.mongodb:mongodb-driver-core:4.10.2"
    implementation "org.mongodb:mongodb-driver-sync:4.10.2"
    modImplementation fileTree(dir: 'libs', include: ['Cabled-1.0.0-SNAPSHOT.jar'])
    implementation(fileTree(dir: 'libs', include: ['Impactor-Fabric-5.1.1+1.20.1.jar']))
    modImplementation(fileTree(dir: 'libs', include: ['GooeyLibs-fabric-3.0.0-1.20.1-20230617.215100-1.jar']))
    implementation(fileTree(dir: 'libs', include: ['JDA-5.0.0-beta.13-withDependencies-no-opus.jar']))
    shadow group: 'net.dv8tion', name: 'JDA', version:'5.0.0-beta.13'
//    implementation fileTree(dir: 'libs', include: ['mongodbjdbc-tech.sethi.pebbles-shaded-1.20.jar'])
    }

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

shadowJar {
    configurations = [project.configurations.shadow]

    exclude 'org/intellij/**'
    exclude 'org/slf4j/**'
    exclude 'org/jetbrains/**'
    exclude 'com/sun/**'
    exclude 'com/google/**'
//    exclude 'com/**'
//    exclude 'natives/**'
//    exclude 'gnu/**'
//    exclude 'club/**'
//    exclude 'okio/**'
//    exclude 'tomp2p/**'
    exclude 'kotlin/**'
    exclude 'natives/**'


    relocate('net.dv8tion', 'io.github.adainish.cobbledcommunityday.shaded.jda')
    relocate('tomp2p', 'io.github.adainish.cobbledcommunityday.shaded.tomp2p')
    relocate('club.minnced', 'io.github.adainish.cobbledcommunityday.shaded.minnced')
    relocate('com.neovisionaries', 'io.github.adainish.cobbledcommunityday.shaded.neovisionaries')
    relocate('com.iwebpp', 'io.github.adainish.cobbledcommunityday.shaded.iwebpp')
    relocate('com.fasterxml', 'io.github.adainish.cobbledcommunityday.shaded.fasterxml')
    relocate('okio', 'io.github.adainish.cobbledcommunityday.shaded.okio')
    relocate('gnu', 'io.github.adainish.cobbledcommunityday.shaded.gnu')
    relocate('okhttp3', 'io.github.adainish.cobbledcommunityday.shaded.okhttp3')

//    archiveName = rootProject.name + "-" + rootProject.version + "-shade.jar"
}



def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}



tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

